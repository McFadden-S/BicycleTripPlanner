// Mocks generated by Mockito 5.1.0 from annotations
// in bicycle_trip_planner/test/widgets/settings/settings-screen-test.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;
import 'dart:ui' as _i14;

import 'package:bicycle_trip_planner/bloc/application_bloc.dart' as _i12;
import 'package:bicycle_trip_planner/managers/UserSettings.dart' as _i8;
import 'package:bicycle_trip_planner/models/distance_types.dart' as _i11;
import 'package:bicycle_trip_planner/models/pathway.dart' as _i2;
import 'package:bicycle_trip_planner/models/place.dart' as _i9;
import 'package:bicycle_trip_planner/models/place_search.dart' as _i13;
import 'package:bicycle_trip_planner/models/station.dart' as _i7;
import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i4;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePathway_0 extends _i1.Fake implements _i2.Pathway {}

class _FakeFirebaseApp_1 extends _i1.Fake implements _i3.FirebaseApp {}

class _FakeActionCodeInfo_2 extends _i1.Fake implements _i4.ActionCodeInfo {}

class _FakeUserCredential_3 extends _i1.Fake implements _i5.UserCredential {}

class _FakeConfirmationResult_4 extends _i1.Fake
    implements _i5.ConfirmationResult {}

class _FakeUserMetadata_5 extends _i1.Fake implements _i4.UserMetadata {}

class _FakeIdTokenResult_6 extends _i1.Fake implements _i4.IdTokenResult {}

class _FakeUser_7 extends _i1.Fake implements _i5.User {}

class _FakeWidget_8 extends _i1.Fake implements _i6.Widget {
  @override
  String toString({_i6.DiagnosticLevel? minLevel = _i6.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStation_9 extends _i1.Fake implements _i7.Station {}

/// A class which mocks [UserSettings].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserSettings extends _i1.Mock implements _i8.UserSettings {
  MockUserSettings() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic savePlace(_i9.Place? place) =>
      super.noSuchMethod(Invocation.method(#savePlace, [place]));
  @override
  dynamic saveRoute(_i9.Place? origin, _i9.Place? destination,
          List<_i9.Place>? intermediates) =>
      super.noSuchMethod(
          Invocation.method(#saveRoute, [origin, destination, intermediates]));
  @override
  _i10.Future<int> getNumberOfRoutes() =>
      (super.noSuchMethod(Invocation.method(#getNumberOfRoutes, []),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);
  @override
  _i10.Future<_i2.Pathway> getRecentRoute(int? index) =>
      (super.noSuchMethod(Invocation.method(#getRecentRoute, [index]),
              returnValue: Future<_i2.Pathway>.value(_FakePathway_0()))
          as _i10.Future<_i2.Pathway>);
  @override
  _i10.Future<_i11.DistanceType> distanceUnit() => (super.noSuchMethod(
          Invocation.method(#distanceUnit, []),
          returnValue: Future<_i11.DistanceType>.value(_i11.DistanceType.miles))
      as _i10.Future<_i11.DistanceType>);
  @override
  _i10.Future<double> nearbyStationsRange() =>
      (super.noSuchMethod(Invocation.method(#nearbyStationsRange, []),
          returnValue: Future<double>.value(0.0)) as _i10.Future<double>);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i5.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
      returnValue: _FakeFirebaseApp_1()) as _i3.FirebaseApp);
  @override
  set app(_i3.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  set tenantId(String? tenantId) =>
      super.noSuchMethod(Invocation.setter(#tenantId, tenantId),
          returnValueForMissingStub: null);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  _i10.Future<void> useEmulator(String? origin) => (super.noSuchMethod(
      Invocation.method(#useEmulator, [origin]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> useAuthEmulator(String? host, int? port) =>
      (super.noSuchMethod(Invocation.method(#useAuthEmulator, [host, port]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> applyActionCode(String? code) => (super.noSuchMethod(
      Invocation.method(#applyActionCode, [code]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<_i4.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#checkActionCode, [code]),
              returnValue:
                  Future<_i4.ActionCodeInfo>.value(_FakeActionCodeInfo_2()))
          as _i10.Future<_i4.ActionCodeInfo>);
  @override
  _i10.Future<void> confirmPasswordReset({String? code, String? newPassword}) =>
      (super.noSuchMethod(
              Invocation.method(#confirmPasswordReset, [],
                  {#code: code, #newPassword: newPassword}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<_i5.UserCredential> createUserWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserWithEmailAndPassword, [],
                  {#email: email, #password: password}),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<List<String>> fetchSignInMethodsForEmail(String? email) => (super
          .noSuchMethod(Invocation.method(#fetchSignInMethodsForEmail, [email]),
              returnValue: Future<List<String>>.value(<String>[]))
      as _i10.Future<List<String>>);
  @override
  _i10.Future<_i5.UserCredential> getRedirectResult() =>
      (super.noSuchMethod(Invocation.method(#getRedirectResult, []),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
      Invocation.method(#isSignInWithEmailLink, [emailLink]),
      returnValue: false) as bool);
  @override
  _i10.Stream<_i5.User?> authStateChanges() =>
      (super.noSuchMethod(Invocation.method(#authStateChanges, []),
          returnValue: Stream<_i5.User?>.empty()) as _i10.Stream<_i5.User?>);
  @override
  _i10.Stream<_i5.User?> idTokenChanges() =>
      (super.noSuchMethod(Invocation.method(#idTokenChanges, []),
          returnValue: Stream<_i5.User?>.empty()) as _i10.Stream<_i5.User?>);
  @override
  _i10.Stream<_i5.User?> userChanges() =>
      (super.noSuchMethod(Invocation.method(#userChanges, []),
          returnValue: Stream<_i5.User?>.empty()) as _i10.Stream<_i5.User?>);
  @override
  _i10.Future<void> sendPasswordResetEmail(
          {String? email, _i4.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendPasswordResetEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> sendSignInLinkToEmail(
          {String? email, _i4.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendSignInLinkToEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(Invocation.method(#setLanguageCode, [languageCode]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> setSettings(
          {bool? appVerificationDisabledForTesting,
          String? userAccessGroup,
          String? phoneNumber,
          String? smsCode,
          bool? forceRecaptchaFlow}) =>
      (super.noSuchMethod(
              Invocation.method(#setSettings, [], {
                #appVerificationDisabledForTesting:
                    appVerificationDisabledForTesting,
                #userAccessGroup: userAccessGroup,
                #phoneNumber: phoneNumber,
                #smsCode: smsCode,
                #forceRecaptchaFlow: forceRecaptchaFlow
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> setPersistence(_i4.Persistence? persistence) =>
      (super.noSuchMethod(Invocation.method(#setPersistence, [persistence]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<_i5.UserCredential> signInAnonymously() =>
      (super.noSuchMethod(Invocation.method(#signInAnonymously, []),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.UserCredential> signInWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithCredential, [credential]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#signInWithCustomToken, [token]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.UserCredential> signInWithEmailAndPassword(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithEmailAndPassword, [],
                  {#email: email, #password: password}),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.UserCredential> signInWithEmailLink(
          {String? email, String? emailLink}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signInWithEmailLink, [], {#email: email, #emailLink: emailLink}),
          returnValue:
              Future<_i5.UserCredential>.value(_FakeUserCredential_3())) as _i10
          .Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.ConfirmationResult> signInWithPhoneNumber(String? phoneNumber,
          [_i5.RecaptchaVerifier? verifier]) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
          returnValue: Future<_i5.ConfirmationResult>.value(
              _FakeConfirmationResult_4())) as _i10
          .Future<_i5.ConfirmationResult>);
  @override
  _i10.Future<_i5.UserCredential> signInWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithPopup, [provider]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<void> signInWithRedirect(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithRedirect, [provider]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> signOut() => (super.noSuchMethod(
      Invocation.method(#signOut, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#verifyPasswordResetCode, [code]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);
  @override
  _i10.Future<void> verifyPhoneNumber(
          {String? phoneNumber,
          _i4.PhoneVerificationCompleted? verificationCompleted,
          _i4.PhoneVerificationFailed? verificationFailed,
          _i4.PhoneCodeSent? codeSent,
          _i4.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
          String? autoRetrievedSmsCodeForTesting,
          Duration? timeout = const Duration(seconds: 30),
          int? forceResendingToken}) =>
      (super.noSuchMethod(
              Invocation.method(#verifyPhoneNumber, [], {
                #phoneNumber: phoneNumber,
                #verificationCompleted: verificationCompleted,
                #verificationFailed: verificationFailed,
                #codeSent: codeSent,
                #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
                #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
                #timeout: timeout,
                #forceResendingToken: forceResendingToken
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get emailVerified =>
      (super.noSuchMethod(Invocation.getter(#emailVerified), returnValue: false)
          as bool);
  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);
  @override
  _i4.UserMetadata get metadata =>
      (super.noSuchMethod(Invocation.getter(#metadata),
          returnValue: _FakeUserMetadata_5()) as _i4.UserMetadata);
  @override
  List<_i4.UserInfo> get providerData =>
      (super.noSuchMethod(Invocation.getter(#providerData),
          returnValue: <_i4.UserInfo>[]) as List<_i4.UserInfo>);
  @override
  String get uid =>
      (super.noSuchMethod(Invocation.getter(#uid), returnValue: '') as String);
  @override
  _i10.Future<void> delete() => (super.noSuchMethod(
      Invocation.method(#delete, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<String> getIdToken([bool? forceRefresh = false]) =>
      (super.noSuchMethod(Invocation.method(#getIdToken, [forceRefresh]),
          returnValue: Future<String>.value('')) as _i10.Future<String>);
  @override
  _i10.Future<_i4.IdTokenResult> getIdTokenResult(
          [bool? forceRefresh = false]) =>
      (super.noSuchMethod(Invocation.method(#getIdTokenResult, [forceRefresh]),
              returnValue:
                  Future<_i4.IdTokenResult>.value(_FakeIdTokenResult_6()))
          as _i10.Future<_i4.IdTokenResult>);
  @override
  _i10.Future<_i5.UserCredential> linkWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(Invocation.method(#linkWithCredential, [credential]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.UserCredential> linkWithPopup(_i4.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#linkWithPopup, [provider]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<_i5.ConfirmationResult> linkWithPhoneNumber(String? phoneNumber,
          [_i5.RecaptchaVerifier? verifier]) =>
      (super.noSuchMethod(
              Invocation.method(#linkWithPhoneNumber, [phoneNumber, verifier]),
              returnValue: Future<_i5.ConfirmationResult>.value(
                  _FakeConfirmationResult_4()))
          as _i10.Future<_i5.ConfirmationResult>);
  @override
  _i10.Future<_i5.UserCredential> reauthenticateWithCredential(
          _i4.AuthCredential? credential) =>
      (super.noSuchMethod(
              Invocation.method(#reauthenticateWithCredential, [credential]),
              returnValue:
                  Future<_i5.UserCredential>.value(_FakeUserCredential_3()))
          as _i10.Future<_i5.UserCredential>);
  @override
  _i10.Future<void> reload() => (super.noSuchMethod(
      Invocation.method(#reload, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> sendEmailVerification(
          [_i4.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
              Invocation.method(#sendEmailVerification, [actionCodeSettings]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<_i5.User> unlink(String? providerId) =>
      (super.noSuchMethod(Invocation.method(#unlink, [providerId]),
              returnValue: Future<_i5.User>.value(_FakeUser_7()))
          as _i10.Future<_i5.User>);
  @override
  _i10.Future<void> updateEmail(String? newEmail) => (super.noSuchMethod(
      Invocation.method(#updateEmail, [newEmail]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> updatePassword(String? newPassword) => (super.noSuchMethod(
      Invocation.method(#updatePassword, [newPassword]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> updatePhoneNumber(
          _i4.PhoneAuthCredential? phoneCredential) =>
      (super.noSuchMethod(
              Invocation.method(#updatePhoneNumber, [phoneCredential]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> updateDisplayName(String? displayName) =>
      (super.noSuchMethod(Invocation.method(#updateDisplayName, [displayName]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> updatePhotoURL(String? photoURL) => (super.noSuchMethod(
      Invocation.method(#updatePhotoURL, [photoURL]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> updateProfile({String? displayName, String? photoURL}) =>
      (super.noSuchMethod(
              Invocation.method(#updateProfile, [],
                  {#displayName: displayName, #photoURL: photoURL}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> verifyBeforeUpdateEmail(String? newEmail,
          [_i4.ActionCodeSettings? actionCodeSettings]) =>
      (super.noSuchMethod(
              Invocation.method(
                  #verifyBeforeUpdateEmail, [newEmail, actionCodeSettings]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
}

/// A class which mocks [ApplicationBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockApplicationBloc extends _i1.Mock implements _i12.ApplicationBloc {
  MockApplicationBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Widget get selectedScreen =>
      (super.noSuchMethod(Invocation.getter(#selectedScreen),
          returnValue: _FakeWidget_8()) as _i6.Widget);
  @override
  set selectedScreen(_i6.Widget? _selectedScreen) =>
      super.noSuchMethod(Invocation.setter(#selectedScreen, _selectedScreen),
          returnValueForMissingStub: null);
  @override
  Map<String, _i6.Widget> get screens =>
      (super.noSuchMethod(Invocation.getter(#screens),
          returnValue: <String, _i6.Widget>{}) as Map<String, _i6.Widget>);
  @override
  List<_i13.PlaceSearch> get searchResults =>
      (super.noSuchMethod(Invocation.getter(#searchResults),
          returnValue: <_i13.PlaceSearch>[]) as List<_i13.PlaceSearch>);
  @override
  set searchResults(List<_i13.PlaceSearch>? _searchResults) =>
      super.noSuchMethod(Invocation.setter(#searchResults, _searchResults),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i10.Future<void> updateGroupSize(int? groupSize) => (super.noSuchMethod(
      Invocation.method(#updateGroupSize, [groupSize]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  void showBinaryDialog() =>
      super.noSuchMethod(Invocation.method(#showBinaryDialog, []),
          returnValueForMissingStub: null);
  @override
  void showSelectedStationDialog(_i7.Station? station) => super.noSuchMethod(
      Invocation.method(#showSelectedStationDialog, [station]),
      returnValueForMissingStub: null);
  @override
  void clearBinaryDialog() =>
      super.noSuchMethod(Invocation.method(#clearBinaryDialog, []),
          returnValueForMissingStub: null);
  @override
  void clearSelectedStationDialog() =>
      super.noSuchMethod(Invocation.method(#clearSelectedStationDialog, []),
          returnValueForMissingStub: null);
  @override
  List<_i13.PlaceSearch> getSearchResult() =>
      (super.noSuchMethod(Invocation.method(#getSearchResult, []),
          returnValue: <_i13.PlaceSearch>[]) as List<_i13.PlaceSearch>);
  @override
  bool ifSearchResult() =>
      (super.noSuchMethod(Invocation.method(#ifSearchResult, []),
          returnValue: false) as bool);
  @override
  dynamic searchPlaces(String? searchTerm) =>
      super.noSuchMethod(Invocation.method(#searchPlaces, [searchTerm]));
  @override
  dynamic searchSelectedStation(_i7.Station? station, int? uid) => super
      .noSuchMethod(Invocation.method(#searchSelectedStation, [station, uid]));
  @override
  dynamic setSelectedSearch(int? searchIndex, int? uid) => super
      .noSuchMethod(Invocation.method(#setSelectedSearch, [searchIndex, uid]));
  @override
  _i10.Future<void> updateLocationLive() => (super.noSuchMethod(
      Invocation.method(#updateLocationLive, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> fetchCurrentLocation() => (super.noSuchMethod(
      Invocation.method(#fetchCurrentLocation, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  dynamic setLocationMarker(_i9.Place? place, [int? uid = -1]) =>
      super.noSuchMethod(Invocation.method(#setLocationMarker, [place, uid]));
  @override
  dynamic setSelectedLocation(_i9.Place? stop, int? uid) =>
      super.noSuchMethod(Invocation.method(#setSelectedLocation, [stop, uid]));
  @override
  dynamic clearLocationMarker(int? uid) =>
      super.noSuchMethod(Invocation.method(#clearLocationMarker, [uid]));
  @override
  dynamic clearSelectedLocation(int? uid) =>
      super.noSuchMethod(Invocation.method(#clearSelectedLocation, [uid]));
  @override
  dynamic removeSelectedLocation(int? uid) =>
      super.noSuchMethod(Invocation.method(#removeSelectedLocation, [uid]));
  @override
  _i10.Future<_i7.Station> getStartStation(_i9.Place? origin,
          [int? groupSize = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#getStartStation, [origin, groupSize]),
              returnValue: Future<_i7.Station>.value(_FakeStation_9()))
          as _i10.Future<_i7.Station>);
  @override
  _i10.Future<_i7.Station> getEndStation(_i9.Place? destination,
          [int? groupSize = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#getEndStation, [destination, groupSize]),
              returnValue: Future<_i7.Station>.value(_FakeStation_9()))
          as _i10.Future<_i7.Station>);
  @override
  dynamic setRoutes(_i9.Place? origin, _i9.Place? destination,
          _i7.Station? startStation, _i7.Station? endStation,
          [List<_i9.Place>? intermediates = const [], int? groupSize = 1]) =>
      super.noSuchMethod(Invocation.method(#setRoutes, [
        origin,
        destination,
        startStation,
        endStation,
        intermediates,
        groupSize
      ]));
  @override
  dynamic findRoute(_i9.Place? origin, _i9.Place? destination,
          [List<_i9.Place>? intermediates = const [], int? groupSize = 1]) =>
      super.noSuchMethod(Invocation.method(
          #findRoute, [origin, destination, intermediates, groupSize]));
  @override
  _i10.Future<int> getDurationFromToStation(
          _i7.Station? startStation, _i7.Station? endStation) =>
      (super.noSuchMethod(
          Invocation.method(
              #getDurationFromToStation, [startStation, endStation]),
          returnValue: Future<int>.value(0)) as _i10.Future<int>);
  @override
  double costEfficiencyHeuristic(_i7.Station? curStation,
          _i7.Station? intermediaryStation, _i7.Station? endStation) =>
      (super.noSuchMethod(
          Invocation.method(#costEfficiencyHeuristic,
              [curStation, intermediaryStation, endStation]),
          returnValue: 0.0) as double);
  @override
  _i10.Future<void> findCostEfficientRoute(
          _i9.Place? origin, _i9.Place? destination, [int? groupSize = 1]) =>
      (super.noSuchMethod(
              Invocation.method(
                  #findCostEfficientRoute, [origin, destination, groupSize]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  void endRoute() => super.noSuchMethod(Invocation.method(#endRoute, []),
      returnValueForMissingStub: null);
  @override
  void setNavigationSubscription() =>
      super.noSuchMethod(Invocation.method(#setNavigationSubscription, []),
          returnValueForMissingStub: null);
  @override
  _i10.Future<void> updateStations() => (super.noSuchMethod(
      Invocation.method(#updateStations, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> filterStationMarkers() => (super.noSuchMethod(
      Invocation.method(#filterStationMarkers, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  dynamic viewStationMarker(_i7.Station? station, [int? uid = -1]) =>
      super.noSuchMethod(Invocation.method(#viewStationMarker, [station, uid]));
  @override
  _i6.Widget getSelectedScreen() =>
      (super.noSuchMethod(Invocation.method(#getSelectedScreen, []),
          returnValue: _FakeWidget_8()) as _i6.Widget);
  @override
  void setSelectedScreen(String? screenName) =>
      super.noSuchMethod(Invocation.method(#setSelectedScreen, [screenName]),
          returnValueForMissingStub: null);
  @override
  void goBack(String? backTo) =>
      super.noSuchMethod(Invocation.method(#goBack, [backTo]),
          returnValueForMissingStub: null);
  @override
  _i10.Future<void> startNavigation() => (super.noSuchMethod(
      Invocation.method(#startNavigation, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> setPartialRoutes(
          [List<String>? first = const [],
          List<String>? intermediates = const []]) =>
      (super.noSuchMethod(
              Invocation.method(#setPartialRoutes, [first, intermediates]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  bool isUserLogged() =>
      (super.noSuchMethod(Invocation.method(#isUserLogged, []),
          returnValue: false) as bool);
  @override
  void clearMap() => super.noSuchMethod(Invocation.method(#clearMap, []),
      returnValueForMissingStub: null);
  @override
  void changeUnits() => super.noSuchMethod(Invocation.method(#changeUnits, []),
      returnValueForMissingStub: null);
  @override
  void updateSettings() =>
      super.noSuchMethod(Invocation.method(#updateSettings, []),
          returnValueForMissingStub: null);
  @override
  void notifyListeningWidgets() =>
      super.noSuchMethod(Invocation.method(#notifyListeningWidgets, []),
          returnValueForMissingStub: null);
  @override
  void addListener(_i14.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i14.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
