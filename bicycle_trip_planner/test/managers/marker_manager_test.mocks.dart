// Mocks generated by Mockito 5.1.0 from annotations
// in bicycle_trip_planner/test/managers/marker_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:bicycle_trip_planner/bloc/application_bloc.dart' as _i4;
import 'package:bicycle_trip_planner/models/place.dart' as _i7;
import 'package:bicycle_trip_planner/models/place_search.dart' as _i5;
import 'package:bicycle_trip_planner/models/station.dart' as _i3;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWidget_0 extends _i1.Fake implements _i2.Widget {
  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStation_1 extends _i1.Fake implements _i3.Station {}

/// A class which mocks [ApplicationBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockApplicationBloc extends _i1.Mock implements _i4.ApplicationBloc {
  MockApplicationBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Widget get selectedScreen =>
      (super.noSuchMethod(Invocation.getter(#selectedScreen),
          returnValue: _FakeWidget_0()) as _i2.Widget);
  @override
  set selectedScreen(_i2.Widget? _selectedScreen) =>
      super.noSuchMethod(Invocation.setter(#selectedScreen, _selectedScreen),
          returnValueForMissingStub: null);
  @override
  Map<String, _i2.Widget> get screens =>
      (super.noSuchMethod(Invocation.getter(#screens),
          returnValue: <String, _i2.Widget>{}) as Map<String, _i2.Widget>);
  @override
  List<_i5.PlaceSearch> get searchResults =>
      (super.noSuchMethod(Invocation.getter(#searchResults),
          returnValue: <_i5.PlaceSearch>[]) as List<_i5.PlaceSearch>);
  @override
  set searchResults(List<_i5.PlaceSearch>? _searchResults) =>
      super.noSuchMethod(Invocation.setter(#searchResults, _searchResults),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i6.Future<void> updateGroupSize(int? groupSize) =>
      (super.noSuchMethod(Invocation.method(#updateGroupSize, [groupSize]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void showBinaryDialog() =>
      super.noSuchMethod(Invocation.method(#showBinaryDialog, []),
          returnValueForMissingStub: null);
  @override
  void showSelectedStationDialog(_i3.Station? station) => super.noSuchMethod(
      Invocation.method(#showSelectedStationDialog, [station]),
      returnValueForMissingStub: null);
  @override
  void clearBinaryDialog() =>
      super.noSuchMethod(Invocation.method(#clearBinaryDialog, []),
          returnValueForMissingStub: null);
  @override
  void clearSelectedStationDialog() =>
      super.noSuchMethod(Invocation.method(#clearSelectedStationDialog, []),
          returnValueForMissingStub: null);
  @override
  List<_i5.PlaceSearch> getSearchResult() =>
      (super.noSuchMethod(Invocation.method(#getSearchResult, []),
          returnValue: <_i5.PlaceSearch>[]) as List<_i5.PlaceSearch>);
  @override
  bool ifSearchResult() =>
      (super.noSuchMethod(Invocation.method(#ifSearchResult, []),
          returnValue: false) as bool);
  @override
  dynamic searchPlaces(String? searchTerm) =>
      super.noSuchMethod(Invocation.method(#searchPlaces, [searchTerm]));
  @override
  dynamic searchSelectedStation(_i3.Station? station, int? uid) => super
      .noSuchMethod(Invocation.method(#searchSelectedStation, [station, uid]));
  @override
  dynamic setSelectedSearch(int? searchIndex, int? uid) => super
      .noSuchMethod(Invocation.method(#setSelectedSearch, [searchIndex, uid]));
  @override
  _i6.Future<void> updateLocationLive() =>
      (super.noSuchMethod(Invocation.method(#updateLocationLive, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  dynamic setLocationMarker(_i7.Place? place, [int? uid = -1]) =>
      super.noSuchMethod(Invocation.method(#setLocationMarker, [place, uid]));
  @override
  dynamic setSelectedLocation(_i7.Place? stop, int? uid) =>
      super.noSuchMethod(Invocation.method(#setSelectedLocation, [stop, uid]));
  @override
  dynamic clearLocationMarker(int? uid) =>
      super.noSuchMethod(Invocation.method(#clearLocationMarker, [uid]));
  @override
  dynamic clearSelectedLocation(int? uid) =>
      super.noSuchMethod(Invocation.method(#clearSelectedLocation, [uid]));
  @override
  dynamic removeSelectedLocation(int? uid) =>
      super.noSuchMethod(Invocation.method(#removeSelectedLocation, [uid]));
  @override
  _i6.Future<_i3.Station> getStartStation(_i7.Place? origin,
          [int? groupSize = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#getStartStation, [origin, groupSize]),
              returnValue: Future<_i3.Station>.value(_FakeStation_1()))
          as _i6.Future<_i3.Station>);
  @override
  _i6.Future<_i3.Station> getEndStation(_i7.Place? destination,
          [int? groupSize = 1]) =>
      (super.noSuchMethod(
              Invocation.method(#getEndStation, [destination, groupSize]),
              returnValue: Future<_i3.Station>.value(_FakeStation_1()))
          as _i6.Future<_i3.Station>);
  @override
  dynamic findRoute(_i7.Place? origin, _i7.Place? destination,
          [List<_i7.Place>? intermediates = const [], int? groupSize = 1]) =>
      super.noSuchMethod(Invocation.method(
          #findRoute, [origin, destination, intermediates, groupSize]));
  @override
  dynamic setRoutes(_i7.Place? origin, _i7.Place? destination,
          _i3.Station? startStation, _i3.Station? endStation,
          [List<_i7.Place>? intermediates = const [], int? groupSize = 1]) =>
      super.noSuchMethod(Invocation.method(#setRoutes, [
        origin,
        destination,
        startStation,
        endStation,
        intermediates,
        groupSize
      ]));
  @override
  _i6.Future<void> findCostEfficientRoute(
          _i7.Place? origin, _i7.Place? destination, [int? groupSize = 1]) =>
      (super.noSuchMethod(
          Invocation.method(
              #findCostEfficientRoute, [origin, destination, groupSize]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void endRoute() => super.noSuchMethod(Invocation.method(#endRoute, []),
      returnValueForMissingStub: null);
  @override
  _i6.Future<void> filterStationMarkers() =>
      (super.noSuchMethod(Invocation.method(#filterStationMarkers, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  dynamic viewStationMarker(_i3.Station? station, [int? uid = -1]) =>
      super.noSuchMethod(Invocation.method(#viewStationMarker, [station, uid]));
  @override
  _i2.Widget getSelectedScreen() =>
      (super.noSuchMethod(Invocation.method(#getSelectedScreen, []),
          returnValue: _FakeWidget_0()) as _i2.Widget);
  @override
  void setSelectedScreen(String? screenName) =>
      super.noSuchMethod(Invocation.method(#setSelectedScreen, [screenName]),
          returnValueForMissingStub: null);
  @override
  void goBack(String? backTo) =>
      super.noSuchMethod(Invocation.method(#goBack, [backTo]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> startNavigation() =>
      (super.noSuchMethod(Invocation.method(#startNavigation, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> setPartialRoutes(
          [List<String>? first = const [],
          List<String>? intermediates = const []]) =>
      (super.noSuchMethod(
          Invocation.method(#setPartialRoutes, [first, intermediates]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void clearStationMarkersNotInRoute() =>
      super.noSuchMethod(Invocation.method(#clearStationMarkersNotInRoute, []),
          returnValueForMissingStub: null);
  @override
  bool isUserLogged() =>
      (super.noSuchMethod(Invocation.method(#isUserLogged, []),
          returnValue: false) as bool);
  @override
  void clearMap() => super.noSuchMethod(Invocation.method(#clearMap, []),
      returnValueForMissingStub: null);
  @override
  void changeUnits() => super.noSuchMethod(Invocation.method(#changeUnits, []),
      returnValueForMissingStub: null);
  @override
  void updateSettings() =>
      super.noSuchMethod(Invocation.method(#updateSettings, []),
          returnValueForMissingStub: null);
  @override
  void notifyListeningWidgets() =>
      super.noSuchMethod(Invocation.method(#notifyListeningWidgets, []),
          returnValueForMissingStub: null);
  @override
  void addListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
