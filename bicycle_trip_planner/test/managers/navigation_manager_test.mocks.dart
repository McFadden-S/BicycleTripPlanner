// Mocks generated by Mockito 5.1.0 from annotations
// in bicycle_trip_planner/test/managers/navigation_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:bicycle_trip_planner/models/locator.dart' as _i4;
import 'package:geolocator/geolocator.dart' as _i2;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGeolocator_0 extends _i1.Fake implements _i2.Geolocator {}

class _FakeLatLng_1 extends _i1.Fake implements _i3.LatLng {}

/// A class which mocks [Locator].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocator extends _i1.Mock implements _i4.Locator {
  MockLocator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set settings(_i2.LocationSettings? _settings) =>
      super.noSuchMethod(Invocation.setter(#settings, _settings),
          returnValueForMissingStub: null);
  @override
  _i2.LocationAccuracy get accuracy =>
      (super.noSuchMethod(Invocation.getter(#accuracy),
          returnValue: _i2.LocationAccuracy.lowest) as _i2.LocationAccuracy);
  @override
  set accuracy(_i2.LocationAccuracy? _accuracy) =>
      super.noSuchMethod(Invocation.setter(#accuracy, _accuracy),
          returnValueForMissingStub: null);
  @override
  int get distanceFilter =>
      (super.noSuchMethod(Invocation.getter(#distanceFilter), returnValue: 0)
          as int);
  @override
  set distanceFilter(int? _distanceFilter) =>
      super.noSuchMethod(Invocation.setter(#distanceFilter, _distanceFilter),
          returnValueForMissingStub: null);
  @override
  _i2.Geolocator get geolocator =>
      (super.noSuchMethod(Invocation.getter(#geolocator),
          returnValue: _FakeGeolocator_0()) as _i2.Geolocator);
  @override
  set geolocator(_i2.Geolocator? _geolocator) =>
      super.noSuchMethod(Invocation.setter(#geolocator, _geolocator),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i3.LatLng> locate() =>
      (super.noSuchMethod(Invocation.method(#locate, []),
              returnValue: Future<_i3.LatLng>.value(_FakeLatLng_1()))
          as _i5.Future<_i3.LatLng>);

  /*@override
  void locationSettings([double distanceFilter = 0]) => (super.noSuchMethod(Invocation.getter(#locationSettings), returnValue: Future<bool>.value(true)
  as _i5.Future<bool>));*/
}
